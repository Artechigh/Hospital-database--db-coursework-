// "npx prisma studio"
// "npx prisma format"
// "npx prisma generate" (to update packages for prismaFunctions if schema.prisma was changed)

// "npx prisma db pull"
// "npx prisma db push" (to update database provider if schema.prisma was changed)

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Hospital {
  id          Int           @id @default(autoincrement())
  name        String        @unique
  address     String
  phone       String
  Doctors     Doctor[]      @relation("HospitalDoctor")
  Appointment Appointment[]
}

model User {
  id        Int      @id @default(autoincrement())
  name      String
  email     String   @unique
  password  String
  birthDate DateTime
  gender    String
  Doctor    Doctor?
  Patient   Patient?
}

model Doctor {
  id           Int           @id @default(autoincrement())
  specialty    String
  User         User          @relation(fields: [userId], references: [id])
  userId       Int           @unique
  Hospitals    Hospital[]    @relation("HospitalDoctor")
  Appointments Appointment[]
  Schedules    Schedule[]
}

model Schedule {
  id         Int    @id @default(autoincrement())
  workhours  String
  doctorId   Int
  Doctor     Doctor @relation(fields: [doctorId], references: [id])
  hospitalId Int
}

model Patient {
  id           Int           @id @default(autoincrement())
  User         User          @relation(fields: [userId], references: [id])
  userId       Int           @unique
  Appointments Appointment[]
}

model Appointment {
  id            Int            @id @default(autoincrement())
  date          DateTime
  diagnosis     String?
  hospitalId    Int
  Hospital      Hospital       @relation(fields: [hospitalId], references: [id])
  doctorId      Int
  Doctor        Doctor         @relation(fields: [doctorId], references: [id])
  patientId     Int
  Patient       Patient        @relation(fields: [patientId], references: [id])
  Prescriptions Prescription[]
}

model Prescription {
  id            Int         @id @default(autoincrement())
  name          String
  dosage        String
  instructions  String
  doctorId      Int
  patientId     Int
  appointmentId Int
  Appointment   Appointment @relation(fields: [appointmentId], references: [id])
}
